# Hugo站点构建和部署到GitHub Pages的工作流
name: Deploy Hugo site to Pages

on:
  # 在推送到默认分支时运行
  push:
    branches: ["main"]

  # 允许从Actions选项卡手动运行此工作流
  workflow_dispatch:

# 设置GITHUB_TOKEN的权限，以允许部署到GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 仅允许一个并发部署，跳过正在运行的部署和最新排队部署之间的运行。
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

# 默认使用bash
defaults:
  run:
    shell: bash

jobs:
  # 构建任务
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.134.0
    steps:
      - name: 安装Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: 安装Dart Sass
        run: sudo snap install dart-sass
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: 设置Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: 安装Node.js依赖
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: 用Hugo构建
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          # 显示Hugo版本和环境信息
          hugo version
          
          # 生成网站内容，使用动态baseURL
          hugo \
            --minify \
            --verbose \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
          
          # 确保使用静态首页作为备份
          if [ ! -f public/index.html ]; then
            cp index.html public/index.html || true
          fi
          
          # 确保404页面存在
          cp static/404.html public/404.html || true
          
          # 确保year/2025目录及其索引文件存在
          mkdir -p public/year/2025
          if [ ! -f public/year/2025/index.html ]; then
            # 如果不存在，复制静态/y目录中的年份页面并修改为对应年份
            cp static/y/index.html public/year/2025/index.html || true
            # 替换查询参数方式为直接加载2025年内容
            sed -i 's/const urlParams = new URLSearchParams(window.location.search);/const urlParams = new URLSearchParams("year=2025");/g' public/year/2025/index.html || true
          fi
          
          # 列出生成的文件
          echo "列出生成的year目录文件:"
          find public/year -type f | sort
          
          # 查看是否有年份页面
          echo "检查year/2025/index.html是否存在:"
          ls -la public/year/2025/index.html || echo "未找到该文件"
      - name: 上传构建产物
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # 部署任务
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: 部署到GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
